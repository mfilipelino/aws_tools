name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: ${{ !env.ACT }}
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run linter
      run: |
        uv run ruff check .
    
    - name: Check formatting
      run: |
        uv run ruff format --check .
    
    - name: Run type checking
      run: |
        uv run mypy . --ignore-missing-imports
    
    - name: Run security checks
      run: |
        uv run bandit -r cli/ s3/ kinesis/ glue/ scripts/ cloudformation/ --severity-level medium --confidence-level medium
        uv run safety check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: ${{ !env.ACT }}
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run tests with coverage
      run: |
        uv run python -m pytest --cov --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false